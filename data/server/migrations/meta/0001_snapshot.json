{
  "id": "59788bff-4907-48fa-965c-142f815a791a",
  "prevId": "3df96234-b5de-4fa4-97be-c319fc00920c",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.accounts": {
      "name": "accounts",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "(auth.user_id())"
        },
        "type": {
          "name": "type",
          "type": "account_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "currency_id": {
          "name": "currency_id",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        },
        "balance": {
          "name": "balance",
          "type": "numeric(14, 2)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "is_archived": {
          "name": "is_archived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "accounts_user_idx": {
          "name": "accounts_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "accounts_user_archived_idx": {
          "name": "accounts_user_archived_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_archived",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "accounts_user_type_idx": {
          "name": "accounts_user_type_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "accounts_currency_id_currencies_code_fk": {
          "name": "accounts_currency_id_currencies_code_fk",
          "tableFrom": "accounts",
          "columnsFrom": [
            "currency_id"
          ],
          "tableTo": "currencies",
          "columnsTo": [
            "code"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"accounts\".\"user_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.user_id() = \"accounts\".\"user_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"accounts\".\"user_id\")",
          "withCheck": "(select auth.user_id() = \"accounts\".\"user_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"accounts\".\"user_id\")"
        }
      },
      "checkConstraints": {
        "accounts_name_not_empty": {
          "name": "accounts_name_not_empty",
          "value": "length(trim(\"accounts\".\"name\")) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.attachments": {
      "name": "attachments",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "type": {
          "name": "type",
          "type": "attachment_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "bucket_path": {
          "name": "bucket_path",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "mime": {
          "name": "mime",
          "type": "varchar(150)",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": true
        },
        "file_size": {
          "name": "file_size",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "duration": {
          "name": "duration",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "attachments_type_idx": {
          "name": "attachments_type_idx",
          "columns": [
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "attachments_created_at_idx": {
          "name": "attachments_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "attachments_bucket_path_not_empty": {
          "name": "attachments_bucket_path_not_empty",
          "value": "length(trim(\"attachments\".\"bucket_path\")) > 0"
        },
        "attachments_file_size_positive": {
          "name": "attachments_file_size_positive",
          "value": "\"attachments\".\"file_size\" IS NULL OR \"attachments\".\"file_size\" > 0"
        },
        "attachments_duration_positive": {
          "name": "attachments_duration_positive",
          "value": "\"attachments\".\"duration\" IS NULL OR \"attachments\".\"duration\" > 0"
        },
        "attachments_voice_has_duration": {
          "name": "attachments_voice_has_duration",
          "value": "\"attachments\".\"type\" != 'voice' OR \"attachments\".\"duration\" IS NOT NULL"
        }
      },
      "isRLSEnabled": false
    },
    "public.budgets": {
      "name": "budgets",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "(auth.user_id())"
        },
        "category_id": {
          "name": "category_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "amount": {
          "name": "amount",
          "type": "numeric(14, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "period": {
          "name": "period",
          "type": "budget_period",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'monthly'"
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "budgets_user_idx": {
          "name": "budgets_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "budgets_category_idx": {
          "name": "budgets_category_idx",
          "columns": [
            {
              "expression": "category_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "budgets_user_period_idx": {
          "name": "budgets_user_period_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "period",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "budgets_category_period_start_unq": {
          "name": "budgets_category_period_start_unq",
          "columns": [
            {
              "expression": "category_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "period",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "start_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "budgets_category_id_categories_id_fk": {
          "name": "budgets_category_id_categories_id_fk",
          "tableFrom": "budgets",
          "columnsFrom": [
            "category_id"
          ],
          "tableTo": "categories",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"budgets\".\"user_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.user_id() = \"budgets\".\"user_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"budgets\".\"user_id\")",
          "withCheck": "(select auth.user_id() = \"budgets\".\"user_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"budgets\".\"user_id\")"
        }
      },
      "checkConstraints": {
        "budgets_positive_amount": {
          "name": "budgets_positive_amount",
          "value": "\"budgets\".\"amount\" > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.categories": {
      "name": "categories",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "(auth.user_id())"
        },
        "type": {
          "name": "type",
          "type": "category_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "parent_id": {
          "name": "parent_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "icon": {
          "name": "icon",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "'circle'"
        },
        "is_archived": {
          "name": "is_archived",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "categories_user_idx": {
          "name": "categories_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "categories_parent_idx": {
          "name": "categories_parent_idx",
          "columns": [
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "categories_user_archived_idx": {
          "name": "categories_user_archived_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "is_archived",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "categories_user_type_idx": {
          "name": "categories_user_type_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "categories_user_parent_name_unq": {
          "name": "categories_user_parent_name_unq",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "categories_parent_id_fk": {
          "name": "categories_parent_id_fk",
          "tableFrom": "categories",
          "columnsFrom": [
            "parent_id"
          ],
          "tableTo": "categories",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"categories\".\"user_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.user_id() = \"categories\".\"user_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"categories\".\"user_id\")",
          "withCheck": "(select auth.user_id() = \"categories\".\"user_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"categories\".\"user_id\")"
        }
      },
      "checkConstraints": {
        "categories_name_not_empty": {
          "name": "categories_name_not_empty",
          "value": "length(trim(\"categories\".\"name\")) > 0"
        },
        "categories_no_self_parent": {
          "name": "categories_no_self_parent",
          "value": "\"categories\".\"parent_id\" IS NULL OR \"categories\".\"parent_id\" != \"categories\".\"id\""
        }
      },
      "isRLSEnabled": false
    },
    "public.currencies": {
      "name": "currencies",
      "schema": "",
      "columns": {
        "code": {
          "name": "code",
          "type": "varchar(3)",
          "primaryKey": true,
          "notNull": true
        },
        "symbol": {
          "name": "symbol",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.exchange_rates": {
      "name": "exchange_rates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "base_currency": {
          "name": "base_currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true
        },
        "quote_currency": {
          "name": "quote_currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true
        },
        "rate": {
          "name": "rate",
          "type": "numeric",
          "primaryKey": false,
          "notNull": true
        },
        "rate_date": {
          "name": "rate_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "exchange_rates_base_quote_date_unq": {
          "name": "exchange_rates_base_quote_date_unq",
          "columns": [
            {
              "expression": "base_currency",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "quote_currency",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "rate_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "exchange_rates_base_currency_idx": {
          "name": "exchange_rates_base_currency_idx",
          "columns": [
            {
              "expression": "base_currency",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "exchange_rates_quote_currency_idx": {
          "name": "exchange_rates_quote_currency_idx",
          "columns": [
            {
              "expression": "quote_currency",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "exchange_rates_base_currency_currencies_code_fk": {
          "name": "exchange_rates_base_currency_currencies_code_fk",
          "tableFrom": "exchange_rates",
          "columnsFrom": [
            "base_currency"
          ],
          "tableTo": "currencies",
          "columnsTo": [
            "code"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "exchange_rates_quote_currency_currencies_code_fk": {
          "name": "exchange_rates_quote_currency_currencies_code_fk",
          "tableFrom": "exchange_rates",
          "columnsFrom": [
            "quote_currency"
          ],
          "tableTo": "currencies",
          "columnsTo": [
            "code"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "exchange_rates_positive_rate": {
          "name": "exchange_rates_positive_rate",
          "value": "\"exchange_rates\".\"rate\" > 0"
        },
        "exchange_rates_different_currencies": {
          "name": "exchange_rates_different_currencies",
          "value": "\"exchange_rates\".\"base_currency\" != \"exchange_rates\".\"quote_currency\""
        }
      },
      "isRLSEnabled": false
    },
    "public.transaction_attachments": {
      "name": "transaction_attachments",
      "schema": "",
      "columns": {
        "transaction_id": {
          "name": "transaction_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "attachment_id": {
          "name": "attachment_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "transaction_attachments_transaction_idx": {
          "name": "transaction_attachments_transaction_idx",
          "columns": [
            {
              "expression": "transaction_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transaction_attachments_attachment_idx": {
          "name": "transaction_attachments_attachment_idx",
          "columns": [
            {
              "expression": "attachment_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "transaction_attachments_transaction_id_transactions_id_fk": {
          "name": "transaction_attachments_transaction_id_transactions_id_fk",
          "tableFrom": "transaction_attachments",
          "columnsFrom": [
            "transaction_id"
          ],
          "tableTo": "transactions",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "transaction_attachments_attachment_id_attachments_id_fk": {
          "name": "transaction_attachments_attachment_id_attachments_id_fk",
          "tableFrom": "transaction_attachments",
          "columnsFrom": [
            "attachment_id"
          ],
          "tableTo": "attachments",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {
        "transaction_attachments_transaction_id_attachment_id_pk": {
          "name": "transaction_attachments_transaction_id_attachment_id_pk",
          "columns": [
            "transaction_id",
            "attachment_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM transactions t \n        WHERE t.id = \"transaction_attachments\".\"transaction_id\" \n        AND t.user_id = auth.user_id()\n      )"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "EXISTS (\n        SELECT 1 FROM transactions t \n        WHERE t.id = \"transaction_attachments\".\"transaction_id\" \n        AND t.user_id = auth.user_id()\n      )"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM transactions t \n        WHERE t.id = \"transaction_attachments\".\"transaction_id\" \n        AND t.user_id = auth.user_id()\n      )",
          "withCheck": "EXISTS (\n        SELECT 1 FROM transactions t \n        WHERE t.id = \"transaction_attachments\".\"transaction_id\" \n        AND t.user_id = auth.user_id()\n      )"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "EXISTS (\n        SELECT 1 FROM transactions t \n        WHERE t.id = \"transaction_attachments\".\"transaction_id\" \n        AND t.user_id = auth.user_id()\n      )"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transactions": {
      "name": "transactions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "(auth.user_id())"
        },
        "type": {
          "name": "type",
          "type": "transaction_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "counter_account_id": {
          "name": "counter_account_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "category_id": {
          "name": "category_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "amount": {
          "name": "amount",
          "type": "numeric(14, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "currency_id": {
          "name": "currency_id",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": true
        },
        "tx_date": {
          "name": "tx_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "notes": {
          "name": "notes",
          "type": "varchar(1000)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "transactions_user_idx": {
          "name": "transactions_user_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_account_idx": {
          "name": "transactions_account_idx",
          "columns": [
            {
              "expression": "account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_category_idx": {
          "name": "transactions_category_idx",
          "columns": [
            {
              "expression": "category_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_user_date_idx": {
          "name": "transactions_user_date_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "tx_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_user_type_idx": {
          "name": "transactions_user_type_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "type",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_date_idx": {
          "name": "transactions_date_idx",
          "columns": [
            {
              "expression": "tx_date",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "transactions_counter_account_idx": {
          "name": "transactions_counter_account_idx",
          "columns": [
            {
              "expression": "counter_account_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "transactions_account_id_accounts_id_fk": {
          "name": "transactions_account_id_accounts_id_fk",
          "tableFrom": "transactions",
          "columnsFrom": [
            "account_id"
          ],
          "tableTo": "accounts",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "transactions_counter_account_id_accounts_id_fk": {
          "name": "transactions_counter_account_id_accounts_id_fk",
          "tableFrom": "transactions",
          "columnsFrom": [
            "counter_account_id"
          ],
          "tableTo": "accounts",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "transactions_category_id_categories_id_fk": {
          "name": "transactions_category_id_categories_id_fk",
          "tableFrom": "transactions",
          "columnsFrom": [
            "category_id"
          ],
          "tableTo": "categories",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        },
        "transactions_currency_id_currencies_code_fk": {
          "name": "transactions_currency_id_currencies_code_fk",
          "tableFrom": "transactions",
          "columnsFrom": [
            "currency_id"
          ],
          "tableTo": "currencies",
          "columnsTo": [
            "code"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"transactions\".\"user_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.user_id() = \"transactions\".\"user_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"transactions\".\"user_id\")",
          "withCheck": "(select auth.user_id() = \"transactions\".\"user_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"transactions\".\"user_id\")"
        }
      },
      "checkConstraints": {
        "transactions_positive_amount": {
          "name": "transactions_positive_amount",
          "value": "\"transactions\".\"amount\" > 0"
        },
        "transactions_transfer_different_accounts": {
          "name": "transactions_transfer_different_accounts",
          "value": "\"transactions\".\"type\" != 'transfer' OR \"transactions\".\"account_id\" != \"transactions\".\"counter_account_id\""
        },
        "transactions_transfer_has_counter_account": {
          "name": "transactions_transfer_has_counter_account",
          "value": "\"transactions\".\"type\" != 'transfer' OR \"transactions\".\"counter_account_id\" IS NOT NULL"
        },
        "transactions_non_transfer_no_counter_account": {
          "name": "transactions_non_transfer_no_counter_account",
          "value": "\"transactions\".\"type\" = 'transfer' OR \"transactions\".\"counter_account_id\" IS NULL"
        },
        "transactions_date_not_future": {
          "name": "transactions_date_not_future",
          "value": "\"transactions\".\"tx_date\" <= CURRENT_DATE"
        }
      },
      "isRLSEnabled": false
    },
    "public.user_preferences": {
      "name": "user_preferences",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "varchar(50)",
          "primaryKey": true,
          "notNull": true,
          "default": "(auth.user_id())"
        },
        "default_currency": {
          "name": "default_currency",
          "type": "varchar(3)",
          "primaryKey": false,
          "notNull": false
        },
        "first_weekday": {
          "name": "first_weekday",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false,
          "default": "'1'"
        },
        "locale": {
          "name": "locale",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false,
          "default": "'en-US'"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "user_preferences_default_currency_currencies_code_fk": {
          "name": "user_preferences_default_currency_currencies_code_fk",
          "tableFrom": "user_preferences",
          "columnsFrom": [
            "default_currency"
          ],
          "tableTo": "currencies",
          "columnsTo": [
            "code"
          ],
          "onUpdate": "no action",
          "onDelete": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "crud-authenticated-policy-select": {
          "name": "crud-authenticated-policy-select",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"user_preferences\".\"user_id\")"
        },
        "crud-authenticated-policy-insert": {
          "name": "crud-authenticated-policy-insert",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": [
            "authenticated"
          ],
          "withCheck": "(select auth.user_id() = \"user_preferences\".\"user_id\")"
        },
        "crud-authenticated-policy-update": {
          "name": "crud-authenticated-policy-update",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"user_preferences\".\"user_id\")",
          "withCheck": "(select auth.user_id() = \"user_preferences\".\"user_id\")"
        },
        "crud-authenticated-policy-delete": {
          "name": "crud-authenticated-policy-delete",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": [
            "authenticated"
          ],
          "using": "(select auth.user_id() = \"user_preferences\".\"user_id\")"
        }
      },
      "checkConstraints": {
        "user_preferences_valid_weekday": {
          "name": "user_preferences_valid_weekday",
          "value": "\"user_preferences\".\"first_weekday\" >= 1 AND \"user_preferences\".\"first_weekday\" <= 7"
        }
      },
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.account_type": {
      "name": "account_type",
      "schema": "public",
      "values": [
        "saving",
        "payment",
        "debt"
      ]
    },
    "public.attachment_type": {
      "name": "attachment_type",
      "schema": "public",
      "values": [
        "receipt",
        "voice"
      ]
    },
    "public.budget_period": {
      "name": "budget_period",
      "schema": "public",
      "values": [
        "daily",
        "weekly",
        "monthly",
        "quarterly",
        "yearly"
      ]
    },
    "public.category_type": {
      "name": "category_type",
      "schema": "public",
      "values": [
        "expense",
        "income"
      ]
    },
    "public.transaction_type": {
      "name": "transaction_type",
      "schema": "public",
      "values": [
        "expense",
        "income",
        "transfer"
      ]
    }
  },
  "schemas": {},
  "views": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}